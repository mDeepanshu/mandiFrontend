{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../main-service.service\";\nimport * as i2 from \"@angular/material/snack-bar\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/autocomplete\";\nimport * as i8 from \"@angular/material/core\";\nconst _c0 = [\"itemname\"];\n\nfunction ItemsComponent_mat_option_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r3.itemName);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r3.itemName, \" \");\n  }\n}\n\nexport let ItemsComponent = /*#__PURE__*/(() => {\n  class ItemsComponent {\n    constructor(mainService, _snackBar) {\n      this.mainService = mainService;\n      this._snackBar = _snackBar;\n    }\n\n    ngOnInit() {\n      this.projectForm = new FormGroup({\n        itemname: new FormControl(null, Validators.required) // address: new FormControl(null, Validators.required),\n\n      });\n      setTimeout(() => {\n        this.itemname.nativeElement.focus();\n      }, 0);\n    }\n\n    onSaveForm() {\n      // this.Party = this.projectForm.value;\n      this.mainService.addNewItem(this.projectForm.value.itemname).then(data => {\n        this._snackBar.open('Item Saved', 'Close');\n      });\n    }\n\n    resetForm() {\n      this.projectForm.reset();\n    }\n\n    itemName(val) {\n      clearTimeout(this.timer);\n      this.items = [];\n      this.timer = setTimeout(() => __awaiter(this, void 0, void 0, function* () {\n        this.items = yield this.mainService.autoCompleteItemName(val);\n      }), 350);\n    }\n\n  }\n\n  ItemsComponent.ɵfac = function ItemsComponent_Factory(t) {\n    return new (t || ItemsComponent)(i0.ɵɵdirectiveInject(i1.MainServiceService), i0.ɵɵdirectiveInject(i2.MatSnackBar));\n  };\n\n  ItemsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ItemsComponent,\n    selectors: [[\"app-items\"]],\n    viewQuery: function ItemsComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.itemname = _t.first);\n      }\n    },\n    decls: 18,\n    vars: 4,\n    consts: [[1, \"heading\"], [1, \"firstDiv\"], [1, \"mainForm\", 3, \"formGroup\", \"ngSubmit\"], [1, \"inputs\"], [1, \"input-group\", \"input-group-sm\", \"mb-3\"], [1, \"input-group\", \"mb-3\"], [2, \"width\", \"100%\"], [\"type\", \"text\", \"placeholder\", \"ITEM NAME\", \"formControlName\", \"itemname\", \"matInput\", \"\", 3, \"matAutocomplete\", \"input\"], [\"itemname\", \"\"], [\"auto\", \"matAutocomplete\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 2, \"margin-left\", \"3cm\", 3, \"disabled\"], [3, \"value\"]],\n    template: function ItemsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r4 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtext(1, \"ITEMS\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(2, \"hr\");\n        i0.ɵɵelementStart(3, \"div\", 1)(4, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function ItemsComponent_Template_form_ngSubmit_4_listener() {\n          return ctx.onSaveForm();\n        });\n        i0.ɵɵelementStart(5, \"div\", 3)(6, \"div\", 4)(7, \"div\", 5)(8, \"mat-form-field\", 6)(9, \"input\", 7, 8);\n        i0.ɵɵlistener(\"input\", function ItemsComponent_Template_input_input_9_listener() {\n          i0.ɵɵrestoreView(_r4);\n\n          const _r0 = i0.ɵɵreference(10);\n\n          return i0.ɵɵresetView(ctx.itemName(_r0.value));\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"mat-autocomplete\", null, 9);\n        i0.ɵɵtemplate(13, ItemsComponent_mat_option_13_Template, 2, 2, \"mat-option\", 10);\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(14, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function ItemsComponent_Template_button_click_14_listener() {\n          return ctx.resetForm();\n        });\n        i0.ɵɵtext(15, \" New \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"button\", 12);\n        i0.ɵɵtext(17, \" Save \");\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(12);\n\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.projectForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"matAutocomplete\", _r1);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.items);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", !ctx.projectForm.valid);\n      }\n    },\n    dependencies: [i3.NgForOf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName, i5.MatFormField, i6.MatInput, i7.MatAutocomplete, i7.MatAutocompleteTrigger, i8.MatOption]\n  });\n  return ItemsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}