{"ast":null,"code":"import { FormControl, FormGroup } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../main-service.service\";\nimport * as i2 from \"@angular/material/snack-bar\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/autocomplete\";\nimport * as i8 from \"@angular/material/core\";\nimport * as i9 from \"@angular/material/tabs\";\nimport * as i10 from \"@angular/material/datepicker\";\nconst _c0 = [\"aForm\"];\nconst _c1 = [\"username\"];\nconst _c2 = [\"usernameo\"];\nconst _c3 = [\"username2\"];\n\nfunction CrateComponent_mat_option_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-option\", 51);\n    i0.ɵɵlistener(\"onSelectionChange\", function CrateComponent_mat_option_16_Template_mat_option_onSelectionChange_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r18);\n      const option_r16 = restoredCtx.$implicit;\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.onPartySelect(option_r16._id));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r16 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r16.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r16.name, \" \");\n  }\n}\n\nfunction CrateComponent_mat_option_55_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 52);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r19 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r19);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r19, \" \");\n  }\n}\n\nfunction CrateComponent_mat_option_84_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 52);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r20 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r20.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r20.name, \" \");\n  }\n}\n\nfunction CrateComponent_tr_120_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\", 53);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const item_r21 = ctx.$implicit;\n    const i_r22 = ctx.index;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i_r22 + 1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r21.date);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r21.type);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r21.count);\n  }\n}\n\nexport let CrateComponent = /*#__PURE__*/(() => {\n  class CrateComponent {\n    constructor(mainService, _snackBar) {\n      this.mainService = mainService;\n      this._snackBar = _snackBar;\n      this.selected = 0;\n      this.collectOrLend = 'COLLECT';\n      this.dataCurrent = {\n        type1: -1,\n        type2: -1,\n        type3: -1\n      };\n      this.onTabNum = 0;\n      this.date = new Date();\n      this.elemArr = ['username0', 'username1', 'username2'];\n      this.toNextElement = 0;\n    }\n\n    ngOnInit() {\n      this.projectForm = new FormGroup({\n        name: new FormControl(),\n        type: new FormControl()\n      });\n      setTimeout(() => {\n        this.username0.nativeElement.focus();\n      }, 0);\n    }\n\n    onKeydownHandler(e) {\n      this.aForm.nativeElement[this.toNextElement].focus();\n\n      if (this.toNextElement == 5) {\n        this.toNextElement = 0;\n      } else {\n        this.toNextElement++;\n      }\n    }\n\n    ctrlRi(e) {\n      console.log('right arrow');\n\n      if (this.selected == 2) {\n        this.selected = 0;\n        setTimeout(() => {\n          this.username0.nativeElement.focus();\n        }, 0);\n      } else {\n        this.selected++;\n        setTimeout(() => {\n          this[this.elemArr[this.selected]].nativeElement.focus();\n        }, 0);\n      }\n    }\n\n    partyName(val) {\n      clearTimeout(this.timer);\n      this.options = [];\n      this.timer = setTimeout(() => {\n        console.log(val);\n        this.mainService.crateAutoCompleteName(val).then(arr => {\n          console.log(arr);\n          this.options = arr;\n        });\n      }, 1000);\n    }\n\n    onSaveForm(form) {\n      let obj = {\n        name: form.value.partyName,\n        type1: form.value.typeOne,\n        type2: form.value.typeTwo,\n        type3: form.value.typeThree\n      };\n      this.mainService.addCrateParty(obj).then(data => {\n        this._snackBar.open('Crate Party Added', 'Close');\n      });\n    }\n\n    collect(form) {\n      let obj = form.value;\n      obj.partyId = this.selectedId;\n      obj.date = this.date;\n\n      if (this.selectedTab === 'LEND') {\n        obj.count = -1 * obj.count;\n      }\n\n      console.log(obj);\n      this.mainService.newCrateTransaction(obj).then(data => {\n        this._snackBar.open('Transaction Added', 'Close');\n      });\n    }\n\n    onTab(e) {\n      this.selectedTab = e;\n      this.collectOrLend = e;\n    }\n\n    onPartySelect(id) {\n      this.selectedId = id;\n      console.log(id);\n    }\n\n    find(val) {\n      let date = val.datepicker._model.selection;\n      this.mainService.getCrateTransaction(this.selectedId, date.getDate(), date.getMonth() + 1, date.getFullYear()).then(data => {\n        this.tableArr = data.transactions;\n        this.dataCurrent = data.current;\n      });\n    }\n\n    toggleCng() {}\n\n  }\n\n  CrateComponent.ɵfac = function CrateComponent_Factory(t) {\n    return new (t || CrateComponent)(i0.ɵɵdirectiveInject(i1.MainServiceService), i0.ɵɵdirectiveInject(i2.MatSnackBar));\n  };\n\n  CrateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CrateComponent,\n    selectors: [[\"app-crate\"]],\n    viewQuery: function CrateComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n        i0.ɵɵviewQuery(_c2, 5);\n        i0.ɵɵviewQuery(_c3, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.aForm = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.username0 = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.username1 = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.username2 = _t.first);\n      }\n    },\n    hostBindings: function CrateComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"keydown.enter\", function CrateComponent_keydown_enter_HostBindingHandler($event) {\n          return ctx.onKeydownHandler($event);\n        }, false, i0.ɵɵresolveDocument)(\"keydown.control./\", function CrateComponent_keydown_control___HostBindingHandler($event) {\n          return ctx.ctrlRi($event);\n        }, false, i0.ɵɵresolveDocument);\n      }\n    },\n    decls: 121,\n    vars: 13,\n    consts: [[1, \"heading\"], [\"animationDuration\", \"0ms\", 3, \"selectedIndex\"], [\"label\", \"COLLECT/LEND\"], [1, \"container\"], [3, \"ngSubmit\", \"keydown.enter\"], [\"fone\", \"ngForm\", \"aForm\", \"\"], [1, \"row\", 2, \"margin-top\", \"30px\"], [1, \"form-floating\", \"mb-3\"], [2, \"width\", \"100%\"], [\"type\", \"email\", \"id\", \"floatingInput\", \"placeholder\", \"Party Name\", \"matInput\", \"\", 3, \"matAutocomplete\", \"input\"], [\"username\", \"\"], [\"auto\", \"matAutocomplete\"], [3, \"value\", \"onSelectionChange\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-10\"], [1, \"form-check\", \"form-check-inline\"], [\"type\", \"radio\", \"name\", \"inlineRadioOptions\", \"id\", \"inlineRadio1\", \"value\", \"1\", \"name\", \"type\", \"ngModel\", \"\", 1, \"form-check-input\"], [\"for\", \"inlineRadio1\", 1, \"form-check-label\"], [\"type\", \"radio\", \"name\", \"inlineRadioOptions\", \"id\", \"inlineRadio2\", \"value\", \"2\", \"name\", \"type\", \"ngModel\", \"\", 1, \"form-check-input\"], [\"for\", \"inlineRadio2\", 1, \"form-check-label\"], [\"type\", \"radio\", \"name\", \"inlineRadioOptions\", \"id\", \"inlineRadio3\", \"value\", \"3\", \"name\", \"type\", \"ngModel\", \"\", 1, \"form-check-input\"], [\"for\", \"inlineRadio3\", 1, \"form-check-label\"], [1, \"col-2\"], [1, \"col\"], [\"type\", \"number\", \"name\", \"count\", \"ngModel\", \"\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [\"label\", \"Add Crate Party\"], [3, \"ngSubmit\"], [\"f\", \"ngForm\", \"bForm\", \"\"], [1, \"container\", \"firstDiv\"], [1, \"row\"], [\"type\", \"email\", \"id\", \"floatingInput\", \"name\", \"partyName\", \"placeholder\", \"Party Name\", \"matInput\", \"\", \"ngModel\", \"\", 3, \"matAutocomplete\", \"input\"], [\"usernameo\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"number\", \"name\", \"typeOne\", \"ngModel\", \"\", \"placeholder\", \"Type 1\", 1, \"form-control\"], [\"for\", \"floatingInput\"], [\"type\", \"number\", \"id\", \"floatingInput\", \"placeholder\", \"Type 2\", \"name\", \"typeTwo\", \"ngModel\", \"\", 1, \"form-control\"], [\"type\", \"number\", \"id\", \"floatingInput\", \"placeholder\", \"Type 3\", \"name\", \"typeThree\", \"ngModel\", \"\", 1, \"form-control\"], [\"label\", \"VIEW TRANSACTIONS\"], [1, \"row\", 2, \"margin-top\", \"20px\"], [\"type\", \"text\", \"placeholder\", \"PARTY NAME\", \"formControlName\", \"name\", \"matInput\", \"\", 2, \"height\", \"34px\", 3, \"matAutocomplete\", \"input\"], [\"username2\", \"\"], [\"appearance\", \"fill\"], [\"matInput\", \"\", 3, \"matDatepicker\"], [\"matSuffix\", \"\", 3, \"for\"], [\"viewOfDate\", \"\"], [\"picker\", \"\"], [1, \"btn\", \"btn-primary\", 2, \"height\", \"64px\", 3, \"click\"], [1, \"row\", 2, \"margin\", \"15px\"], [1, \"table\"], [\"scope\", \"col\"], [4, \"ngFor\", \"ngForOf\"], [3, \"value\", \"onSelectionChange\"], [3, \"value\"], [\"scope\", \"row\"]],\n    template: function CrateComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r23 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtext(1, \"CRATE\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(2, \"hr\");\n        i0.ɵɵelementStart(3, \"mat-tab-group\", 1)(4, \"mat-tab\", 2)(5, \"div\", 3)(6, \"form\", 4, 5);\n        i0.ɵɵlistener(\"ngSubmit\", function CrateComponent_Template_form_ngSubmit_6_listener() {\n          i0.ɵɵrestoreView(_r23);\n\n          const _r0 = i0.ɵɵreference(7);\n\n          return i0.ɵɵresetView(ctx.collect(_r0));\n        })(\"keydown.enter\", function CrateComponent_Template_form_keydown_enter_6_listener($event) {\n          return $event.preventDefault();\n        });\n        i0.ɵɵelementStart(9, \"div\", 6)(10, \"div\", 7)(11, \"mat-form-field\", 8)(12, \"input\", 9, 10);\n        i0.ɵɵlistener(\"input\", function CrateComponent_Template_input_input_12_listener() {\n          i0.ɵɵrestoreView(_r23);\n\n          const _r2 = i0.ɵɵreference(13);\n\n          return i0.ɵɵresetView(ctx.partyName(_r2.value));\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"mat-autocomplete\", null, 11);\n        i0.ɵɵtemplate(16, CrateComponent_mat_option_16_Template, 2, 2, \"mat-option\", 12);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(17, \"div\", 6)(18, \"div\", 13)(19, \"div\", 14);\n        i0.ɵɵelement(20, \"input\", 15);\n        i0.ɵɵelementStart(21, \"label\", 16);\n        i0.ɵɵtext(22, \"Type 1\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(23, \"div\", 14);\n        i0.ɵɵelement(24, \"input\", 17);\n        i0.ɵɵelementStart(25, \"label\", 18);\n        i0.ɵɵtext(26, \"Type 2\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(27, \"div\", 14);\n        i0.ɵɵelement(28, \"input\", 19);\n        i0.ɵɵelementStart(29, \"label\", 20);\n        i0.ɵɵtext(30, \"Type 3\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(31, \"div\", 21);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"div\", 6)(33, \"div\", 22);\n        i0.ɵɵelement(34, \"input\", 23);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"div\", 22)(36, \"button\", 24);\n        i0.ɵɵtext(37, \"COLLECT\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(38, \" --- \");\n        i0.ɵɵelementStart(39, \"button\", 24);\n        i0.ɵɵtext(40, \"LEND\");\n        i0.ɵɵelementEnd()()()()()();\n        i0.ɵɵelementStart(41, \"mat-tab\", 25)(42, \"form\", 26, 27);\n        i0.ɵɵlistener(\"ngSubmit\", function CrateComponent_Template_form_ngSubmit_42_listener() {\n          i0.ɵɵrestoreView(_r23);\n\n          const _r5 = i0.ɵɵreference(43);\n\n          return i0.ɵɵresetView(ctx.onSaveForm(_r5));\n        });\n        i0.ɵɵelementStart(45, \"div\", 28)(46, \"div\", 29)(47, \"div\", 13)(48, \"div\", 29)(49, \"div\", 7)(50, \"mat-form-field\", 8)(51, \"input\", 30, 31);\n        i0.ɵɵlistener(\"input\", function CrateComponent_Template_input_input_51_listener() {\n          i0.ɵɵrestoreView(_r23);\n\n          const _r7 = i0.ɵɵreference(52);\n\n          return i0.ɵɵresetView(ctx.partyName(_r7.value));\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(53, \"mat-autocomplete\", null, 11);\n        i0.ɵɵtemplate(55, CrateComponent_mat_option_55_Template, 2, 2, \"mat-option\", 32);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(56, \"div\", 29)(57, \"div\", 22)(58, \"div\", 7);\n        i0.ɵɵelement(59, \"input\", 33);\n        i0.ɵɵelementStart(60, \"label\", 34);\n        i0.ɵɵtext(61, \"Type 1\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(62, \"div\", 22)(63, \"div\", 7);\n        i0.ɵɵelement(64, \"input\", 35);\n        i0.ɵɵelementStart(65, \"label\", 34);\n        i0.ɵɵtext(66, \"Type 2\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(67, \"div\", 22)(68, \"div\", 7);\n        i0.ɵɵelement(69, \"input\", 36);\n        i0.ɵɵelementStart(70, \"label\", 34);\n        i0.ɵɵtext(71, \"Type 3\");\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(72, \"div\", 21)(73, \"button\", 24);\n        i0.ɵɵtext(74, \"Add Party\");\n        i0.ɵɵelementEnd()()()()()();\n        i0.ɵɵelementStart(75, \"mat-tab\", 37)(76, \"div\", 3)(77, \"div\", 38)(78, \"div\", 22)(79, \"mat-form-field\", 8)(80, \"input\", 39, 40);\n        i0.ɵɵlistener(\"input\", function CrateComponent_Template_input_input_80_listener() {\n          i0.ɵɵrestoreView(_r23);\n\n          const _r10 = i0.ɵɵreference(81);\n\n          return i0.ɵɵresetView(ctx.partyName(_r10.value));\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(82, \"mat-autocomplete\", null, 11);\n        i0.ɵɵtemplate(84, CrateComponent_mat_option_84_Template, 2, 2, \"mat-option\", 32);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(85, \"div\", 22)(86, \"mat-form-field\", 41)(87, \"mat-label\");\n        i0.ɵɵtext(88, \"Choose a date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(89, \"input\", 42)(90, \"mat-datepicker-toggle\", 43, 44)(92, \"mat-datepicker\", null, 45);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(94, \"div\", 22)(95, \"button\", 46);\n        i0.ɵɵlistener(\"click\", function CrateComponent_Template_button_click_95_listener() {\n          i0.ɵɵrestoreView(_r23);\n\n          const _r13 = i0.ɵɵreference(91);\n\n          return i0.ɵɵresetView(ctx.find(_r13));\n        });\n        i0.ɵɵtext(96, \" FIND \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(97, \"div\", 47)(98, \"div\", 22)(99, \"h4\");\n        i0.ɵɵtext(100);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(101, \"div\", 22)(102, \"h4\");\n        i0.ɵɵtext(103);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(104, \"div\", 22)(105, \"h4\");\n        i0.ɵɵtext(106);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(107, \"div\", 29)(108, \"table\", 48)(109, \"thead\")(110, \"tr\")(111, \"th\", 49);\n        i0.ɵɵtext(112, \"#\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(113, \"th\", 49);\n        i0.ɵɵtext(114, \"DATE\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(115, \"th\", 49);\n        i0.ɵɵtext(116, \"TYPE\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(117, \"th\", 49);\n        i0.ɵɵtext(118, \"COUNT\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(119, \"tbody\");\n        i0.ɵɵtemplate(120, CrateComponent_tr_120_Template, 9, 4, \"tr\", 50);\n        i0.ɵɵelementEnd()()()()()();\n      }\n\n      if (rf & 2) {\n        const _r3 = i0.ɵɵreference(15);\n\n        const _r14 = i0.ɵɵreference(93);\n\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"selectedIndex\", ctx.selected);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"matAutocomplete\", _r3);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.options);\n        i0.ɵɵadvance(35);\n        i0.ɵɵproperty(\"matAutocomplete\", _r3);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.options);\n        i0.ɵɵadvance(25);\n        i0.ɵɵproperty(\"matAutocomplete\", _r3);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.options);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"matDatepicker\", _r14);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"for\", _r14);\n        i0.ɵɵadvance(10);\n        i0.ɵɵtextInterpolate1(\"Type 1: \", ctx.dataCurrent.type1, \"\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\"Type 2: \", ctx.dataCurrent.type2, \"\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\"Type 3: \", ctx.dataCurrent.type3, \"\");\n        i0.ɵɵadvance(14);\n        i0.ɵɵproperty(\"ngForOf\", ctx.tableArr);\n      }\n    },\n    dependencies: [i3.NgForOf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NumberValueAccessor, i4.RadioControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormControlName, i5.MatFormField, i5.MatLabel, i5.MatSuffix, i6.MatInput, i7.MatAutocomplete, i7.MatAutocompleteTrigger, i8.MatOption, i9.MatTabGroup, i9.MatTab, i10.MatDatepicker, i10.MatDatepickerInput, i10.MatDatepickerToggle, i4.NgModel, i4.NgForm]\n  });\n  return CrateComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}